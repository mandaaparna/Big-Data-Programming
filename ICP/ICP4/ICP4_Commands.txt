1.create table petrol (distributer_id STRING,distributer_name STRING,amt_IN STRING,amy_OUT STRING,vol_IN INT,vol_OUT INT,year INT)  row  format delimited fields terminated by "," stored as textfile;
2.load data local inpath "/home/cloudera/Downloads/petrol.txt"  into table petrol;
3.SELECT distributer_name,SUM(vol_OUT)  FROM  petrol GROUP  BY distributer_name;
4.SELECT distributer_id,vol_OUT FROM petrol order by vol_OUT desc limit 10;
5.SELECT distributer_id,vol_OUT FROM petrol order by vol_OUT limit 10;
6.SELECT distributer_id,distributer_name,year,vol_IN-vol_OUT  FROM petrol where vol_IN-vol_OUT>500;
7.create table olympic(athelete STRING,age INT,country STRING,year STRING,closing STRING,sport STRING,gold INT,silver INT,bronze INT,total INT) row format delimited fields terminated by "\t" stored as textfile;
8.load data local inpath "/home/cloudera/Downloads/olympic_data.csv" into table olympic;
9.select country,SUM(total) from olympic where sport = 'Swimming' GROUP BY country;
10.select year,SUM(total) from olympic where country = 'India' GROUP BY year;
11.select country,SUM(total) from olympic GROUP BY country;
12.select country,SUM(gold) from olympic GROUP BY country;
13.select country,SUM(total) from olympic where sport="Shooting" and total!=0 Group BY country;
14.create table movies(movieID INT,title String,genres STRING) row format delimited fields terminated by "\t" stored as textfile;
15.load data local inpath "/home/cloudera/Downloads/movies.csv" into table movies;
16.select movieID,title from movies where genres like '%Action%' or genres like '%Adventure%';
17.create table ratings(userID INT,movieID INT,rating INT,timestamp TIMESTAMP) row format delimited fields terminated by "," stored as textfile;
18.load data local inpath "/home/cloudera/Downloads/ratings.csv" into table ratings;
19.select movieID from ratings where rating=5;
20.create table users(userID INT,gender String,occupation INT,zip_code INT) row format delimited fields terminated by "," stored as textfile;
21.load data local inpath "/home/cloudera/Downloads/users.txt" into table users;
22.select ratings.movieID,movie.title,avg(rating) as AVG_Rating from ratings join movie on ratings.movieID=movie.movieID group by ratings.movieID,movie.title order by AVG_RATING desc limit 11;
23.select ratings.movieID,movie.title,movie.genres ,avg(rating) as AVG_RATING from ratings join movie on ratings.movieID=movie.movieID join users on users.userID=ratings.userID and gender='M' group by ratings.movieID, movie.title,movie.genres having avg_rating between 4.4 and 4.9  and (movie.genres like '%Action%' or movie.genres like '%Drama%');
